import streamlit as st
import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

st.title("üìà C√¥ng c·ª• DCA (Dollar-Cost Averaging)")

# Input t·ª´ ng∆∞·ªùi d√πng
ticker = st.text_input("Nh·∫≠p m√£ t√†i s·∫£n (VD: BTC-USD, AAPL)", "BTC-USD")
amount = st.number_input("S·ªë ti·ªÅn ƒë·∫ßu t∆∞ m·ªói k·ª≥ (USD)", value=100)
freq = st.selectbox("T·∫ßn su·∫•t", ["1d", "1wk", "1mo"])
start = st.date_input("Ng√†y b·∫Øt ƒë·∫ßu", pd.to_datetime("2020-01-01"))
end = st.date_input("Ng√†y k·∫øt th√∫c")

if st.button("T√≠nh to√°n"):
    # L·∫•y d·ªØ li·ªáu gi√°
    data = yf.download(ticker, start=start, end=end, interval=freq)
    data = data["Close"].dropna()

    # M√¥ ph·ªèng DCA
    units = []
    total_units = 0
    total_invested = 0

    for date, price in data.items():
        buy_units = amount / price
        total_units += buy_units
        total_invested += amount
        units.append([date, price, buy_units, total_units])

    df = pd.DataFrame(units, columns=["Date", "Price", "Units Bought", "Total Units"])
    if data is None or data.empty:
    st.error("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu cho m√£ ch·ª©ng kho√°n ho·∫∑c kho·∫£ng th·ªùi gian ƒë√£ nh·∫≠p.")
    st.stop()
else:
    final_value = total_units * data.iloc[-1]

    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    st.subheader("üìä K·∫øt qu·∫£")
    st.write(f"T·ªïng v·ªën ƒë·∫ßu t∆∞: ${total_invested:,.2f}")
    st.write(f"T·ªïng s·ªë l∆∞·ª£ng t√†i s·∫£n: {total_units:.4f}")
    st.write(f"Gi√° tr·ªã hi·ªán t·∫°i: ${final_value:,.2f}")
    st.write(f"L·ª£i nhu·∫≠n: {final_value - total_invested:,.2f} USD")

    # V·∫Ω bi·ªÉu ƒë·ªì
    plt.plot(df["Date"], df["Total Units"] * data.values, label="Gi√° tr·ªã DCA")
    plt.plot(data.index, data.values / data.values[0] * total_invested, label="Mua 1 l·∫ßn")
    plt.legend()

    st.pyplot(plt.gcf())
